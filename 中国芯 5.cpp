#include <iostream>
using namespace std;
int main() {
	int a,b,t;
	cin>>a>>b;
	int i=a*b;
	if(a>b)
		t=a,a=b,b=t;
	while(a!=0)
		t=a,a=b%a,b=t;
	cout<<t<<","<<i/t<<endl;
	return 0;
}
/*
辗转相除法
用辗转相除法求正整数A，B的最大公约数运算过程：
一、用被除数A除以除数B，得到余数C；
二、如果余数C不为0，则用上一步的除数B替换被除数A，用上一步的余数C替换除数B，再次执行第一步；如果余数为0则执行下一步；
三、则此时的除数即是A、B的最大公约数。
例如A=60，B=25，运算结果为：
1，60/25=2……10；
2，25/10=2……5；
3，10/5=2……0。
第三步时，余数为0，运算结束，则此步的除数5即是60和25的最大公约数。
*/
